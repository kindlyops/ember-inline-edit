<div class='introduction f5'>
  <h6 class='ttu tracked'>Block Usage</h6>

  <p>
    In case you need to go beyond the default textfields and control what shows
    as the editable (say a header tag) and what shows as the editor (say a
    custom select component), you can do that too.
  </p>

  <XCard @class='mt2' @type='Code'>
    {{!-- {{code-snippet class="code f6" name="advanced-usage.hbs"}} --}}
    {{#let (get-code-snippet 'advanced-usage.hbs') as |snippet|}}
      <CodeBlock
        class='code f6'
        @language={{snippet.language}}
        @code={{snippet.source}}
      />
    {{/let}}
  </XCard>

  <p>
    Here's what that will do.
  </p>

  <XCard @type='Example'>
    <EmberInlineEdit @value={{this.value}} as |x|>
      <x.editable>
        <h3>{{this.value}}</h3>
      </x.editable>

      <x.editor>
        <select id='some-select' name='some-name' {{on 'input' this.setValue}}>
          <option value='option-1'>Option 1</option>
          <option value='option-2'>Option 2</option>
          <option value='option-3'>Option 3</option>
          <option value='option-4'>Option 4</option>
        </select>
      </x.editor>
    </EmberInlineEdit>
  </XCard>

  <p>
    In this case, you have three yielded properties:

    <ul>
      <li>
        the editor, which is a hash with two properties: editable and editor.
      </li>

      <li>
        <code>onSave</code>
        action.
      </li>

      <li>
        <code>onCancel</code>
        action.
      </li>
    </ul>
  </p>
</div>